{"version":3,"sources":["features/calendar/calendar-api.ts","features/calendar/month.tsx","features/calendar/calendar.tsx","ui/calendar-day.ts","ui/month-title.tsx","ui/theme-toggle.tsx","ui/theme.ts","store/goals.ts","store/theme.ts","app.tsx","common/service-worker.ts","index.tsx"],"names":["getIterableMonth","year","month","daysCount","getDaysInMonth","days","range","firstDayOfWeek","getDayInWeek","lastDayOfWeek","length","n","fill","t","s","chunk","getWeekdays","map","index","moment","format","first","weekdays","day","dayOfTheWeek","Date","getDay","getDate","getMonthNameByIndex","getWeeksCountInMonth","getCurrentYear","getFullYear","equals","fisrt","second","MonthContainer","styled","Week","Month","props","WeekDayComponent","MonthHeaderComponent","DayComponent","useState","weeks","setWeeks","useEffect","date","title","key","week","weekIndex","dayIndex","CalendarContainer","DayComponentDefault","MonthHeaderComponentDefault","Calendar","css","String","raw","CalendarDay","p","isEmpty","complete","isCurrentDay","MonthTitle","Color","Theme","ToggleContainer","dark","light","IconSVG","x","y","opacity","CloudSVG","BatSVG","zIndex","Circle","active","background","states","gradient","lighter","darker","circle","icons","size","position","disable","ThemeToggle","onChange","value","id","state","darkIcons","lightIcons","htmlFor","checked","type","e","target","hidden","item","Cloud","height","width","viewBox","xmlns","d","Bat","themes","text","accent","secondary","accentText","setTheme","theme","html","document","getElementsByTagName","Object","keys","forEach","color","style","setProperty","GoalsDomain","createDomain","addGoal","event","removeGoal","loadGoalsFromLS","effect","use","payload","localStorage","getItem","JSON","parse","saveGoalsToLS","goals","setItem","stringify","$goals","store","on","filter","CalendarApi","done","result","forward","from","to","ThemeDomain","updateTheme","params","setT","defaultStore","transitionDuration","initTheme","$theme","AppContainer","ControlPanel","YearTitle","Footer","WeekDayContainer","useStore","now","getMonth","undefined","find","onClick","MonthHeader","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0993c3e5.chunk.js","sourcesContent":["import {chunk, range} from \"lodash\";\nimport moment from \"moment\";\n\nexport type IterableMonth = number[][];\nexport interface CalendarDate {\n    year: number;\n    month: number;\n    day: number;\n}\n\nexport function getIterableMonth(year: number, month: number): IterableMonth {\n    const daysCount = getDaysInMonth(year, month);\n    const days = range(1, daysCount + 1);\n    const firstDayOfWeek = getDayInWeek(year, month, days[0]);\n    const lastDayOfWeek = getDayInWeek(year, month, days[days.length - 1]);\n\n    const n = range(0, firstDayOfWeek).fill(0);\n    const t = [...n, ...days];\n    const s = [...t, ...range(6 - lastDayOfWeek).fill(0)];\n\n    return chunk(s, 7);\n}\n\nexport function getWeekdays() {\n    const [first, ...weekdays] = range(7).map(index => moment(index, 'e').format('dd'));\n    return [...weekdays, first];\n}\n\nexport function getDayInWeek(year: number, month: number, day: number): number {\n    const dayOfTheWeek = new Date(year, month, day).getDay();\n\n    return dayOfTheWeek === 0 ? 6 : dayOfTheWeek - 1;\n}\n\nexport function getDaysInMonth(year: number, month: number): number {\n    return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getMonthNameByIndex(index: number) {\n    return moment(new Date(2000, index + 1, 0)).format('MMMM');\n}\n\nexport function getWeeksCountInMonth(year: number, month: number): number {\n    const daysCount = getDaysInMonth(year, month);\n    const firstDay = getDayInWeek(year, month, 1);\n    const lastDay = getDayInWeek(year, month, daysCount);\n\n    return (daysCount - (7 - firstDay) - (lastDay + 1)) / 7 + 2;\n}\n\nexport function getCurrentYear(): number {\n    return new Date().getFullYear();\n}\n\nexport function equals(fisrt: CalendarDate, second: CalendarDate) {\n    return fisrt.year === second.year &&\n        fisrt.month === second.month &&\n        fisrt.day === second.day;\n}\n\nexport default {\n    getIterableMonth,\n    getDaysInMonth,\n    getDayInWeek,\n    getMonthNameByIndex,\n    getWeeksCountInMonth,\n    getCurrentYear,\n    equals,\n    getWeekdays,\n};\n","import React, {useEffect, useState} from \"react\";\nimport styled from 'styled-components';\nimport {CalendarDate, IterableMonth, getIterableMonth, getWeekdays} from './calendar-api';\n\nconst MonthContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Week = styled('div')`\n  display: flex;\n`;\n\nexport interface DayComponentProps {\n    date: CalendarDate;\n    index: number;\n}\n\nexport interface MonthHeaderComponentProps {\n    date: CalendarDate;\n    index: number;\n}\n\nexport interface WeekDayComponentProps {\n    title: string;\n    date: CalendarDate;\n    index: number;\n}\n\ninterface MonthProps {\n    year: number;\n    month: number;\n    WeekDayComponent?: React.FC<WeekDayComponentProps>,\n    DayComponent: React.FC<DayComponentProps>;\n    MonthHeaderComponent: React.FC<MonthHeaderComponentProps>,\n}\n\nexport const Month: React.FC<MonthProps> = (props) => {\n    const {year, month,\n        WeekDayComponent,\n        MonthHeaderComponent,\n        DayComponent,\n    } = props;\n    const [weeks, setWeeks] = useState<IterableMonth>([]);\n\n    useEffect(() => {\n        setWeeks(getIterableMonth(year, month));\n    }, []);\n\n    return (\n        <MonthContainer>\n            <MonthHeaderComponent index={month} date={{year, month, day: 0}}/>\n            {WeekDayComponent && <Week>\n                {getWeekdays().map((title, index) => (\n                    <WeekDayComponent date={{year, month: index, day: 0}} key={index} title={title} index={index}/>\n                ))}\n            </Week>}\n            {weeks.map((week: number[], weekIndex: number) => (\n                <Week key={weekIndex}>\n                    {week.map((day, dayIndex) => (\n                        <DayComponent\n                            index={dayIndex}\n                            date={{year, month, day}}\n                            key={dayIndex}\n                        />\n                    ))}\n                </Week>\n            ))}\n        </MonthContainer>\n    )\n};\n","import React from 'react';\nimport range from 'lodash/range';\nimport styled from 'styled-components';\n\nimport {Month, DayComponentProps, MonthHeaderComponentProps, WeekDayComponentProps} from './month';\nimport {getMonthNameByIndex} from \"./calendar-api\";\n\nconst CalendarContainer = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst MonthContainer = styled('div')`\n  padding: 15px;\n`;\n\ninterface CalendarProps {\n    year: number;\n    WeekDayComponent?: React.FC<WeekDayComponentProps>\n    MonthHeaderComponent?: React.FC<MonthHeaderComponentProps>,\n    DayComponent?: React.FC<DayComponentProps>\n}\n\nconst DayComponentDefault: React.FC<DayComponentProps> = ({date}) => {\n    return (\n        date.day === 0 ? <div/> : <div>{date.day}</div>\n    )\n};\n\nconst MonthHeaderComponentDefault: React.FC<MonthHeaderComponentProps> = (props) => {\n    return (\n        <h2>{getMonthNameByIndex(props.date.month)}</h2>\n    )\n};\n\nexport const Calendar: React.FC<CalendarProps> = (props) => {\n    const {\n        year,\n        WeekDayComponent,\n        MonthHeaderComponent = MonthHeaderComponentDefault,\n        DayComponent = DayComponentDefault,\n    } = props;\n\n    return (\n        <CalendarContainer>\n            {range(0, 12).map(month => (\n                <MonthContainer key={month}>\n                    <Month\n                        WeekDayComponent={WeekDayComponent}\n                        MonthHeaderComponent={MonthHeaderComponent}\n                        DayComponent={DayComponent}\n                        year={year}\n                        month={month}\n                    />\n                </MonthContainer>\n            ))}\n        </CalendarContainer>\n    )\n};\n","import styled from \"styled-components\";\n\nconst css = String.raw;\n\nexport const CalendarDay = styled('div')<{isCurrentDay?: boolean, complete?: boolean, isEmpty?: boolean}>`\n  --day-with: 1.3rem;\n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: var(--day-with);\n  height: calc(var(--day-with) + .3rem);\n  padding: 0;\n  font-size: 0.7rem;\n  border-radius: 50%;\n  cursor: pointer;\n  user-select: none;\n  margin: 3px 0;\n  transition: color .7s ease-in-out;\n  \n  ${p => p.isEmpty !== true && css`\n    &:after {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 1px;\n      background-color: var(--secondary);\n      transition: background-color .7s ease-in-out;\n    }\n  `}\n  \n  ${p => p.complete && css`\n    &:before {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: .22rem;\n      width: calc(var(--day-with) - .2rem);\n      height: calc(var(--day-with) - .2rem);\n      border: 1px solid var(--accent);\n      border-radius: 50%;\n      z-index: -1;\n      transition: border .7s ease-in-out;\n    }\n  `}\n  \n  ${p => p.isCurrentDay === true && css`\n    color: var(--accentText);\n\n    &:before {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: .28rem;\n      left: .13rem;\n      width: calc(var(--day-with) - .2rem);\n      height: calc(var(--day-with) - .2rem);\n      background-color: var(--accent);\n      border-radius: 50%;\n      z-index: -1;\n      transition: background-color .7s ease-in-out;\n    }\n  `}\n`;\n","import styled from \"styled-components\";\n\nexport const MonthTitle = styled('h2')`\n  font-size: 1.4rem;\n  font-family: Merriweather, sans-serif;\n  color: var(--accent);\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TOGGLE_HEIGHT = 36;\nconst TOGGLE_WIDTH = TOGGLE_HEIGHT * 2.01;\n\nconst LIGHT_DARKER_COLOR = '#7abae4';\nconst LIGHT_LIGHTER_COLOR = '#90d0fe';\n\nconst DARK_DARKER_COLOR = '#2b00bc';\nconst DARK_LIGHTER_COLOR = '#4a23ca';\n\nconst CIRCLE_LIGHT_COLOR = '#ffea4f';\nconst CIRCLE_DARK_COLOR = '#ebecec';\n\n\nconst ToggleContainer = styled('label')<{ light: string, dark: string }>`\n  display: block;\n  width: ${TOGGLE_WIDTH}px;\n  height: ${TOGGLE_HEIGHT}px;\n  position: relative;\n  background: linear-gradient(148deg, ${p => p.dark} 0%, ${p => p.light} 100%);\n  border-radius: ${TOGGLE_HEIGHT}px;\n  cursor: pointer;\n  transition: all .7s ease-in-out;\n`;\n\nconst IconSVG = styled('svg')<{ x: string, y: string , opacity: number}>`\n  position: absolute;\n  top: 0;\n  transform: translate(${p => p.x}, ${p => p.y});\n  z-index: 100;\n  opacity: ${p => p.opacity};\n  transition: all .7s ease-in-out;\n`;\n\nconst CloudSVG = styled(IconSVG)`\n  left: 0;\n`;\n\nconst BatSVG = styled(IconSVG)<{zIndex: number}>`\n  right: 0;\n  z-index: ${p => p.zIndex};\n`;\n\nconst Circle = styled('div')<{ background: string, active: boolean }>`\n  width: ${TOGGLE_HEIGHT}px;\n  height: ${TOGGLE_HEIGHT}px;\n  position: relative;\n  transform: translateX(${p => p.active ? '0' : '100%'});\n  z-index: 2;\n  transition: all .7s ease-in-out;\n  \n  &:before {\n    content: \"\";\n    display: block;\n    position:absolute;\n    background-color: ${p => p.background};\n    width: 79%;\n    height: 79%;\n    transform: translate(14.35%, 15%);\n    border-radius: 50%;\n    box-shadow: 0 0 16px 0px ${p => p.background};\n    transition: all .7s ease-in-out;\n  }\n`;\n\nconst states = {\n    active: {\n        gradient: {\n            lighter: LIGHT_LIGHTER_COLOR,\n            darker: LIGHT_DARKER_COLOR,\n        },\n        circle: CIRCLE_LIGHT_COLOR,\n        icons: {\n            dark: [\n                {size: 20, zIndex: 3, position: {x: '-0%', y: '40%'}},\n                {size: 17, zIndex: 1, position: {x: '135%', y: '0%'}},\n            ],\n            light: [\n                {size: 10, position: {x: '357%', y: '70%'}},\n                {size: 20, position: {x: '100%', y: '70%'}},\n            ]\n        }\n    },\n    disable: {\n        gradient: {\n            lighter: DARK_LIGHTER_COLOR,\n            darker: DARK_DARKER_COLOR,\n        },\n        circle: CIRCLE_DARK_COLOR,\n        icons: {\n            dark: [\n                {size: 20, zIndex: 3, position: {x: '-100%', y: '70%'}},\n                {size: 17, zIndex: 1, position: {x: '35%', y: '20%'}},\n            ],\n            light: [\n                {size: 10, position: {x: '257%', y: '100%'}},\n                {size: 20, position: {x: '0%', y: '90%'}},\n            ]\n        }\n    }\n};\n\ninterface ThemeToggleProps {\n    onChange: (value: boolean) => void;\n    value: boolean;\n    id: string;\n}\n\nexport const ThemeToggle: React.FC<ThemeToggleProps> = ({onChange, value, id}) => {\n    const state = value ? states.active : states.disable;\n    const darkIcons = state.icons.dark;\n    const lightIcons = state.icons.light;\n\n    return (\n        <ToggleContainer htmlFor={id} light={state.gradient.lighter} dark={state.gradient.darker}>\n            <input\n                id={id}\n                checked={value}\n                type=\"checkbox\"\n                onChange={e => onChange(e.target.checked)}\n                hidden={true}\n            />\n            <Circle background={state.circle} active={value}/>\n            {darkIcons.map((item, index) => (\n                <Bat key={index} {...item} opacity={value ? 0 : 1}/>\n            ))}\n            {lightIcons.map((item, index) => (\n                <Cloud key={index} {...item} opacity={value ? 1 : 0}/>\n            ))}\n        </ToggleContainer>\n    )\n};\n\ninterface IconProps {\n    size: number,\n    opacity: number,\n    position: { x: string, y: string },\n}\n\nconst Cloud: React.FC<IconProps> = ({size, position, opacity}) => (\n    <CloudSVG\n        {...position}\n        opacity={opacity}\n        height={size}\n        width={size}\n        viewBox=\"0 -91 512 512\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path fill=\"#fff\"\n              d=\"M415.7 138.24C413.9 61.59 351.22 0 274.14 0 203.3 0 144.6 52.04 134.2 119.98 66.26 102.21 0 153.52 0 223.52c0 59.1 47.91 107.02 107.02 107.02h317.05v-.38C473.32 326 512 284.72 512 234.4a96.14 96.14 0 00-96.3-96.15zm0 0\"/>\n    </CloudSVG>\n);\n\nconst Bat: React.FC<{zIndex?: number} & IconProps> = ({size, position, zIndex= 1, opacity}) => (\n    <BatSVG\n        {...position}\n        opacity={opacity}\n        width={size}\n        height={size}\n        zIndex={zIndex}\n        viewBox='0 0 187.059 187.059'\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M100 68c-4-3-9-2-13 0-2-2-6-10-6-13 0 2-3 8-2 15-19 0-36-12-36-20-5 0-30 9-43 27 24-1 35 11 41 29 38-13 52 28 52 31 0-2 15-44 52-31 7-12 17-33 42-28-5-9-26-27-41-28-2 4-12 20-37 20l-3-15c-1 3-3 10-6 13z\"/>\n    </BatSVG>\n);\n","export enum Color {\n    background = 'background',\n    text = 'text',\n    accent = 'accent',\n    secondary = 'secondary',\n    accentText = 'accentText',\n}\n\nexport enum Theme {\n    light = 'light',\n    dark = 'dark'\n}\n\ntype ItemMap<C extends object, T> = { [P in keyof C]: T };\n\nexport const dark: ItemMap<typeof Color, string> = {\n    background: '#000',\n    text: '#fff',\n    accent: '#ef2c2c',\n    secondary: '#35363a',\n    accentText: '#fff',\n};\n\nexport const light: ItemMap<typeof Color, string> = {\n    background: '#fff',\n    text: '#000',\n    accent: '#ef2c2c',\n    secondary: '#b8babc',\n    accentText: '#fff',\n};\n\nexport const themes: ItemMap<typeof Theme, ItemMap<typeof Color, string>> = {\n    dark,\n    light,\n};\n\n\nexport function setTheme(theme: Theme) {\n    const html = document.getElementsByTagName('html')[0];\n    const keys = Object.keys(themes[theme]);\n\n    keys.forEach((key) => {\n        const color = (themes[theme] as any)[key];\n\n        html.style.setProperty(`--${key}`, color);\n    });\n}\n\nexport function initTheme(theme: Theme) {\n    const html = document.getElementsByTagName('html')[0];\n    html.style.transitionDuration = '0';\n\n    setTheme(theme);\n\n    html.style.transitionDuration = '0.7s';\n}\n","import {createDomain, forward} from 'effector';\nimport {CalendarDate} from 'src/features/calendar/calendar-api';\nimport {CalendarApi} from \"../features/calendar\";\n\nexport const GoalsDomain = createDomain();\nconst GOALS_LS_KEY = 'GOALS_LS_KEY';\n\nexport interface Goal {\n    date: CalendarDate;\n}\n\nexport const addGoal = GoalsDomain.event<CalendarDate>();\nexport const removeGoal = GoalsDomain.event<CalendarDate>();\n\nexport const loadGoalsFromLS = GoalsDomain.effect<void, Goal[]>()\n    .use(() => {\n        const payload = localStorage.getItem(GOALS_LS_KEY);\n\n        if (!payload) {\n            return [];\n        }\n\n        return JSON.parse(payload);\n    });\nexport const saveGoalsToLS = GoalsDomain.effect<Goal[], void>()\n    .use(goals => {\n        localStorage.setItem(GOALS_LS_KEY, JSON.stringify(goals));\n    });\n\nexport const $goals = GoalsDomain.store<Goal[]>([])\n    .on(addGoal, (state, payload) => (\n        [...state, {date: payload}])\n    )\n    .on(removeGoal, (state, payload) => state.filter(item => !CalendarApi.equals(item.date, payload)))\n    .on(loadGoalsFromLS.done, (state, {result}) => result);\n\nforward({\n    from: $goals,\n    to: saveGoalsToLS,\n});\n","import {createDomain, forward} from 'effector';\n\nimport {setTheme as setT, initTheme, Theme} from 'src/ui/theme';\n\nconst THEME_LS_KEY = 'THEME_LS_KEY';\n\nconst ThemeDomain = createDomain();\n\nexport const setTheme = ThemeDomain.event<Theme>();\nexport const updateTheme = ThemeDomain.effect<Theme, void>()\n    .use(params => {\n        setT(params);\n        localStorage.setItem(THEME_LS_KEY, params);\n    });\n\nconst defaultStore = (localStorage.getItem(THEME_LS_KEY) as any) || Theme.dark;\ninitTheme(defaultStore);\n\nexport const $theme = ThemeDomain\n    .store<Theme>(defaultStore)\n    .on(setTheme, (state, payload) => payload);\n\nforward({\n    from: $theme,\n    to: updateTheme,\n});\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {useStore} from 'effector-react';\nimport {Calendar, CalendarApi} from 'src/features/calendar';\nimport {DayComponentProps, MonthHeaderComponentProps, WeekDayComponentProps} from 'src/features/calendar/month';\nimport {CalendarDay, MonthTitle, ThemeToggle} from 'src/ui';\nimport {Theme} from 'src/ui/theme';\nimport {$goals, addGoal, loadGoalsFromLS, removeGoal} from 'src/store/goals';\nimport {$theme, setTheme} from 'src/store/theme';\n\nconst AppContainer = styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 35px;\n  max-width: 1200px;\n  min-height: 100vh;\n  margin: 0 auto;\n  box-sizing: border-box;\n`;\n\nconst ControlPanel = styled('div')`\n  padding: 15px;\n  background-color: var(--background);\n  position: fixed;\n  top: 0;\n  right: 0;\n  transition: background-color .7s ease-in-out;\n`;\n\nconst YearTitle = styled('h1')`\n  margin-top: 10px;\n  font-size: 3rem;\n  color: var(--accent);\n  font-family: Merriweather, sans-serif;\n`;\n\nconst Footer = styled('footer')`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 35px;\n  font-size: 13px;\n  text-align: center;\n  padding-left: 15px;\n`;\n\nexport const App: React.FC = () => {\n    const year = CalendarApi.getCurrentYear();\n    const theme = useStore($theme);\n\n    useEffect(() => {\n        loadGoalsFromLS();\n    }, []);\n\n    const handleChangeTheme = (value: boolean) => {\n        value ? setTheme(Theme.light) : setTheme(Theme.dark);\n    };\n\n    return (\n        <AppContainer>\n            <ControlPanel>\n                <ThemeToggle\n                    id=\"theme\"\n                    value={theme === Theme.light}\n                    onChange={handleChangeTheme}\n                />\n            </ControlPanel>\n            <YearTitle>{year}</YearTitle>\n            <Calendar\n                year={year}\n                WeekDayComponent={WeekDayComponent}\n                DayComponent={DayComponent}\n                MonthHeaderComponent={MonthHeader}\n            />\n            <Footer>© 2020 Antsiferov Maxim</Footer>\n        </AppContainer>\n    );\n};\n\nconst WeekDayContainer = styled('div')`\n  text-align: center;\n  font-size: .6rem;\n  font-weight: bold;\n  width: 1.3rem;\n  color: var(--text);\n  transition: color .7s ease-in-out;\n`;\n\nconst WeekDayComponent: React.FC<WeekDayComponentProps> = ({title}) => {\n    return (\n        <WeekDayContainer>{title}</WeekDayContainer>\n    )\n};\n\nconst DayComponent: React.FC<DayComponentProps> = ({date}) => {\n    const goals = useStore($goals);\n    if (date.day === 0) {\n        return <CalendarDay isEmpty={true}/>\n    }\n    const now = new Date();\n    const isCurrentDay = now.getDate() === date.day && now.getMonth() === date.month;\n    const complete = goals.find(item => CalendarApi.equals(item.date, date)) !== undefined;\n    const handlePress = () => {\n        if (date.day > now.getDate() || date.month > now.getMonth()) {\n            return;\n        }\n\n        complete ? removeGoal(date) : addGoal(date);\n    };\n\n    return (\n        <CalendarDay\n            isCurrentDay={isCurrentDay}\n            complete={complete}\n            onClick={handlePress}\n        >\n            {date.day}\n        </CalendarDay>\n    );\n};\n\nconst MonthHeader: React.FC<MonthHeaderComponentProps> = props => (\n    <MonthTitle>{CalendarApi.getMonthNameByIndex(props.date.month)}</MonthTitle>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './app';\nimport './assets/reset.css';\nimport './assets/global.css'\nimport * as serviceWorker from './common/service-worker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}